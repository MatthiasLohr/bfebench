# This file is part of the Blockchain-based Fair Exchange Benchmark Tool
#    https://gitlab.com/MatthiasLohr/bfebench
#
# Copyright 2021-2022 Matthias Lohr <mail@mlohr.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ range $protocol := $.Values.bulkConfig.protocols }}
{{ range $strategyPair := $protocol.strategyPairs }}
{{ range $fileSize := $.Values.bulkConfig.fileSizes }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.fullname" $ }}-{{ printf "%s-%s-%s-%s" $protocol.name $strategyPair.seller $strategyPair.buyer $fileSize.size | sha256sum | trunc 8 }}
  labels:
    {{- include "common.labels.standard" $ | nindent 4 }}
  annotations:
    bfebench.matthiaslohr.gitlab.io/protocol: "{{ $protocol.name }}"
    bfebench.matthiaslohr.gitlab.io/seller-strategy: "{{ $strategyPair.seller }}"
    bfebench.matthiaslohr.gitlab.io/buyer-strategy: "{{ $strategyPair.buyer }}"
    bfebench.matthiaslohr.gitlab.io/file-size: "{{ $fileSize.size }}"
spec:
  backoffLimit: 100000
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" $ | nindent 8 }}
      annotations:
        bfebench.matthiaslohr.gitlab.io/protocol: "{{ $protocol.name }}"
        bfebench.matthiaslohr.gitlab.io/seller-strategy: "{{ $strategyPair.seller }}"
        bfebench.matthiaslohr.gitlab.io/buyer-strategy: "{{ $strategyPair.buyer }}"
        bfebench.matthiaslohr.gitlab.io/file-size: "{{ $fileSize.size }}"
    spec:
      restartPolicy: OnFailure
      shareProcessNamespace: true
      containers:
        - name: geth
          image: ethereum/client-go:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - |
              if [ ! -d "$GETH_DATADIR/geth" ] ; then \
                echo "Initializing geth data..."; \
                geth init --datadir "$GETH_DATADIR" "$GETH_GENESIS"; \
                echo "Initialization finished."; \
              fi ; \
              geth --datadir "$GETH_DATADIR" --networkid 1981 \
                --keystore /etc/geth/keystore \
                --unlock 0x1def2f122fc169104b27a99850e67c6e3fe7eede \
                --password /etc/geth/node1.key.password \
                --allow-insecure-unlock \
                --mine \
                --http \
                --http.addr 0.0.0.0 \
                --http.api web3,eth \
                --nodiscover
          env:
            - name: GETH_DATADIR
              value: /data
            - name: GETH_GENESIS
              value: /etc/geth/genesis.json
          volumeMounts:
            - name: config
              subPath: genesis.json
              mountPath: /etc/geth/genesis.json
              readOnly: true
            - name: config
              subPath: node1.key
              mountPath: /etc/geth/node1.key
              readOnly: true
            - name: config
              subPath: node1.account
              mountPath: /etc/geth/keystore/UTC--2021-09-17T12-50-30.526742169Z--1def2f122fc169104b27a99850e67c6e3fe7eede
              readOnly: true
            - name: config
              subPath: node1.key.password
              mountPath: /etc/geth/node1.key.password
              readOnly: true
        - name: bfebench
          image: registry.gitlab.com/matthiaslohr/bfebench
          imagePullPolicy: Always
          command: [ "/bin/bash", "-c" ]
          args:
            - |
              apt update \
              && apt install -y curl procps psmisc xz-utils \
              && mkdir -p testdata \
              && ./tools/generate-test-data.py --lower-boundary-power 10 --upper-boundary-power 20 testdata \
              && RESULT_FILE_NAME="bfebench-{{ $protocol.name }}-{{ $strategyPair.seller }}-{{ $strategyPair.buyer }}-{{ $fileSize.size }}" \
              && bfebench -l DEBUG run -e blockchain-networks/ganache/bfebench-environments.yaml -n {{ $.Values.iterations }} {{ $protocol.name }} {{ $strategyPair.seller }} {{ $strategyPair.buyer }} \
                testdata/bfebench-test-{{ $fileSize.size }}.bin \
                -p timeout {{ $fileSize.timeout }} \
                {{ include "bfebench.protocolParameters" $protocol.parameters }} \
                --output-csv $RESULT_FILE_NAME.csv 2>&1 | tee $RESULT_FILE_NAME.log \
              && killall geth \
              && xz $RESULT_FILE_NAME.log \
              && curl -k -T $RESULT_FILE_NAME.csv -u "{{ $.Values.uploadSecret}}:" -H "X-Requested-With: XMLHttpRequest" {{ $.Values.uploadURL }}/$RESULT_FILE_NAME.csv \
              && curl -k -T $RESULT_FILE_NAME.log.xz -u "{{ $.Values.uploadSecret}}:" -H "X-Requested-With: XMLHttpRequest" {{ $.Values.uploadURL }}/$RESULT_FILE_NAME.log.xz
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
          livenessProbe:
            exec:
              command: ["bash", "-c", "timeout={{ $.Values.readinessLogTimeout }}; [ ! -z \"`find *.log -newermt @$[$(date +%s)-${timeout}]`\" ]"]
            initialDelaySeconds: 60
            periodSeconds: 60
          resources:
            requests:
              cpu: "1000m"
            limits:
              cpu: "1000m"
      volumes:
        - name: config
          configMap:
            name: {{ include "common.names.fullname" $ }}
{{- end -}}
{{- end -}}
{{- end -}}
